/home/pritom/mainDev/VIAP_ARRAY-master/viap/input_program.c: In function ‘main’:
/home/pritom/mainDev/VIAP_ARRAY-master/viap/input_program.c:74:7: error: size of array ‘_1_PROVE’ is too large
   int _1_PROVE[1000000][1000000][1000000][1000000];
       ^
Program Body
{
  int _1_PROVE[1000000][1000000][1000000][1000000];
  int i;
  int j;
  int k;
  int l;
  int n;
  int A[n][n][n][n];
  int max;
  i = 0;
  j = 0;
  k = 0;
  l = 0;
  max = A[0][0][0][0];
  while (i < n)
  {
    j = 0;
    k = 0;
    l = 0;
    while (j < n)
    {
      k = 0;
      l = 0;
      while (k < n)
      {
        l = 0;
        while (l < n)
        {
          if (A[i][j][k][l] > max)
          {
            max = A[i][j][k][l];
          }

          l = l + 1;
        }

        k = k + 1;
      }

      j = j + 1;
    }

    i = i + 1;
  }

  i = 0;
  j = 0;
  k = 0;
  l = 0;
  while (i < n)
  {
    j = 0;
    k = 0;
    l = 0;
    while (j < n)
    {
      k = 0;
      l = 0;
      while (k < n)
      {
        l = 0;
        while (l < n)
        {
          _1_PROVE[i][k][j][l] = A[i][j][k][l] <= max;
          l = l + 1;
        }

        k = k + 1;
      }

      j = j + 1;
    }

    i = i + 1;
  }

}

Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ A:array j:int i:int max:int k:int _1_PROVE:array l:int n:int}


Output in normal notation:
1. Frame axioms:
A1 = A
n1 = n

2. Output equations:
i1 = (_N8+0)
max1 = max15(_N4)
k1 = k29(_N8)
j1 = j29(_N8)
l1 = l29(_N8)
d4array1(_x1,_x2,_x3,_x4,_x5) = d4array29(_x1,_x2,_x3,_x4,_x5,_N8)

3. Other axioms:
max3((_n1+1),_n2,_n3,_n4) = ite((d4array(A,(_n4+0),(_n3+0),(_n2+0),(_n1+0))>max3(_n1,_n2,_n3,_n4)),d4array(A,(_n4+0),(_n3+0),(_n2+0),(_n1+0)),max3(_n1,_n2,_n3,_n4))
max3(0,_n2,_n3,_n4) = max6(_n2,_n3,_n4)
(_N1(_n2,_n3,_n4)>=(-(0)+n))
(_n1<_N1(_n2,_n3,_n4)) -> ((_n1+0)<n)
max6((_n2+1),_n3,_n4) = max3(_N1(_n2,_n3,_n4),_n2,_n3,_n4)
l6((_n2+1),_n3,_n4) = (_N1(_n2,_n3,_n4)+0)
max6(0,_n3,_n4) = max10(_n3,_n4)
l6(0,_n3,_n4) = 0
(_N2(_n3,_n4)>=(-(0)+n))
(_n2<_N2(_n3,_n4)) -> ((_n2+0)<n)
max10((_n3+1),_n4) = max6(_N2(_n3,_n4),_n3,_n4)
k10((_n3+1),_n4) = (_N2(_n3,_n4)+0)
l10((_n3+1),_n4) = l6(_N2(_n3,_n4),_n3,_n4)
max10(0,_n4) = max15(_n4)
k10(0,_n4) = 0
l10(0,_n4) = 0
(_N3(_n4)>=(-(0)+n))
(_n3<_N3(_n4)) -> ((_n3+0)<n)
max15((_n4+1)) = max10(_N3(_n4),_n4)
k15((_n4+1)) = k10(_N3(_n4),_n4)
j15((_n4+1)) = (_N3(_n4)+0)
l15((_n4+1)) = l10(_N3(_n4),_n4)
max15(0) = d4array(A,0,0,0,0)
k15(0) = 0
j15(0) = 0
l15(0) = 0
(_N4>=(-(0)+n))
(_n4<_N4) -> ((_n4+0)<n)
d4array17(_x1,_x2,_x3,_x4,_x5,(_n5+1),_n6,_n7,_n8) = d4array17(_x1,_x2,_x3,_x4,_x5,_n5,_n6,_n7,_n8)
d4array17(_x1,_x2,_x3,_x4,_x5,0,_n6,_n7,_n8) = d4array20(_x1,_x2,_x3,_x4,_x5,_n6,_n7,_n8)
(_N5(_n6,_n7,_n8)>=(-(0)+n))
(_n5<_N5(_n6,_n7,_n8)) -> ((_n5+0)<n)
d4array20(_x1,_x2,_x3,_x4,_x5,(_n6+1),_n7,_n8) = d4array17(_x1,_x2,_x3,_x4,_x5,_N5(_n6,_n7,_n8),_n6,_n7,_n8)
l20((_n6+1),_n7,_n8) = (_N5(_n6,_n7,_n8)+0)
d4array20(_x1,_x2,_x3,_x4,_x5,0,_n7,_n8) = d4array24(_x1,_x2,_x3,_x4,_x5,_n7,_n8)
l20(0,_n7,_n8) = 0
(_N6(_n7,_n8)>=(-(0)+n))
(_n6<_N6(_n7,_n8)) -> ((_n6+0)<n)
d4array24(_x1,_x2,_x3,_x4,_x5,(_n7+1),_n8) = d4array20(_x1,_x2,_x3,_x4,_x5,_N6(_n7,_n8),_n7,_n8)
k24((_n7+1),_n8) = (_N6(_n7,_n8)+0)
l24((_n7+1),_n8) = l20(_N6(_n7,_n8),_n7,_n8)
d4array24(_x1,_x2,_x3,_x4,_x5,0,_n8) = d4array29(_x1,_x2,_x3,_x4,_x5,_n8)
k24(0,_n8) = 0
l24(0,_n8) = 0
(_N7(_n8)>=(-(0)+n))
(_n7<_N7(_n8)) -> ((_n7+0)<n)
d4array29(_x1,_x2,_x3,_x4,_x5,(_n8+1)) = d4array24(_x1,_x2,_x3,_x4,_x5,_N7(_n8),_n8)
k29((_n8+1)) = k24(_N7(_n8),_n8)
j29((_n8+1)) = (_N7(_n8)+0)
l29((_n8+1)) = l24(_N7(_n8),_n8)
d4array29(_x1,_x2,_x3,_x4,_x5,0) = d4array(_x1,_x2,_x3,_x4,_x5)
k29(0) = 0
j29(0) = 0
l29(0) = 0
(_N8>=(-(0)+n))
(_n8<_N8) -> ((_n8+0)<n)

4. Assumption :

5. Assertion :
(d4array29(A,(_n8+0),(_n7+0),(_n6+0),(_n5+0),_N8)<=max15(_N4))

Axiomes Added

d4array24(A,_x2,_x3,_x4,_x5,_N7(_n8),_n8) = d4array24(A,_x2,_x3,_x4,_x5,(_n7+1),_n8)
d4array29(A,_x2,_x3,_x4,_x5,_N8) = d4array29(A,_x2,_x3,_x4,_x5,(_n8+1))
d4array17(A,_x2,_x3,_x4,_x5,_N5(_n6,_n7,_n8),_n6,_n7,_n8) = d4array17(A,_x2,_x3,_x4,_x5,_N5(_n6,_n7,_n8),_n6,_n7,_n8)
d4array20(A,_x2,_x3,_x4,_x5,_N6(_n7,_n8),_n7,_n8) = d4array(A,_x2,_x3,_x4,_x5)
d4array20(A,_x2,_x3,_x4,_x5,_N6(_n7,_n8),_n7,_n8) = d4array20(A,_x2,_x3,_x4,_x5,(_n6+1),_n7,_n8)
d4array24(A,_x2,_x3,_x4,_x5,_N7(_n8),_n8) = d4array(A,_x2,_x3,_x4,_x5)
d4array29(A,_x2,_x3,_x4,_x5,_N8) = d4array(A,_x2,_x3,_x4,_x5)
d4array17(A,_x2,_x3,_x4,_x5,_N5(_n6,_n7,_n8),_n6,_n7,_n8) = d4array(A,_x2,_x3,_x4,_x5)
max3((_n1+1),_n2,_n3,_n4) = ite((d4array(A,(_n4+0),(_n3+0),(_n2+0),(_n1+0))>max3(_n1,_n2,_n3,_n4)),d4array(A,(_n4+0),(_n3+0),(_n2+0),(_n1+0)),max3(_n1,_n2,_n3,_n4))
max3(0,_n2,_n3,_n4) = max6(_n2,_n3,_n4)
(_N1(_n2,_n3,_n4)>=(-(0)+n))
(_n1<_N1(_n2,_n3,_n4)) -> ((_n1+0)<n)
max6((_n2+1),_n3,_n4) = max3(_N1(_n2,_n3,_n4),_n2,_n3,_n4)
l6((_n2+1),_n3,_n4) = (_N1(_n2,_n3,_n4)+0)
max6(0,_n3,_n4) = max10(_n3,_n4)
l6(0,_n3,_n4) = 0
(_N2(_n3,_n4)>=(-(0)+n))
(_n2<_N2(_n3,_n4)) -> ((_n2+0)<n)
max10((_n3+1),_n4) = max6(_N2(_n3,_n4),_n3,_n4)
k10((_n3+1),_n4) = (_N2(_n3,_n4)+0)
l10((_n3+1),_n4) = l6(_N2(_n3,_n4),_n3,_n4)
max10(0,_n4) = max15(_n4)
k10(0,_n4) = 0
l10(0,_n4) = 0
(_N3(_n4)>=(-(0)+n))
(_n3<_N3(_n4)) -> ((_n3+0)<n)
max15((_n4+1)) = max10(_N3(_n4),_n4)
k15((_n4+1)) = k10(_N3(_n4),_n4)
j15((_n4+1)) = (_N3(_n4)+0)
l15((_n4+1)) = l10(_N3(_n4),_n4)
max15(0) = d4array(A,0,0,0,0)
k15(0) = 0
j15(0) = 0
l15(0) = 0
(_N4>=(-(0)+n))
(_n4<_N4) -> ((_n4+0)<n)
(_N5(_n6,_n7,_n8)>=(-(0)+n))
(_n5<_N5(_n6,_n7,_n8)) -> ((_n5+0)<n)
d4array20(A,_x2,_x3,_x4,_x5,(_n6+1),_n7,_n8) = d4array20(A,_x2,_x3,_x4,_x5,_N5(_n6,_n7,_n8),_n6,_n7)
l20((_n6+1),_n7,_n8) = (_N5(_n6,_n7,_n8)+0)
d4array20(A,_x2,_x3,_x4,_x5,0,_n7,_n8) = d4array24(A,_x2,_x3,_x4,_x5,_n7,_n8)
l20(0,_n7,_n8) = 0
(_N6(_n7,_n8)>=(-(0)+n))
(_n6<_N6(_n7,_n8)) -> ((_n6+0)<n)
d4array24(A,_x2,_x3,_x4,_x5,(_n7+1),_n8) = d4array20(A,_x2,_x3,_x4,_x5,_N6(_n7,_n8),_n7,_n8)
k24((_n7+1),_n8) = (_N6(_n7,_n8)+0)
l24((_n7+1),_n8) = l20(_N6(_n7,_n8),_n7,_n8)
d4array24(A,_x2,_x3,_x4,_x5,0,_n8) = d4array29(A,_x2,_x3,_x4,_x5,_n8)
k24(0,_n8) = 0
l24(0,_n8) = 0
(_N7(_n8)>=(-(0)+n))
(_n7<_N7(_n8)) -> ((_n7+0)<n)
d4array29(A,_x2,_x3,_x4,_x5,(_n8+1)) = d4array24(A,_x2,_x3,_x4,_x5,_N7(_n8),_n8)
k29((_n8+1)) = k24(_N7(_n8),_n8)
j29((_n8+1)) = (_N7(_n8)+0)
l29((_n8+1)) = l24(_N7(_n8),_n8)
d4array29(A,_x2,_x3,_x4,_x5,0) = d4array(A,_x2,_x3,_x4,_x5)
k29(0) = 0
j29(0) = 0
l29(0) = 0
(_N8>=(-(0)+n))
(_n8<_N8) -> ((_n8+0)<n)
Unknown
